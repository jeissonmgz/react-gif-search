{"version":3,"sources":["components/AddCategory.js","commons/getGifs.js","components/GiftGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","key","GifExpertApp","props","ReactDOM","render","document","getElementById"],"mappings":"6MAGMA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAUzC,OACE,0BAAMC,SARa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,OAKd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAVhB,SAAC,GAAD,IAAaD,EAAb,EAAGE,OAAUF,MAAb,OAA2BR,EAAcQ,Q,uBCLxDG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,iDACgCC,UACpDH,GAFoB,+DAIHI,MAAMF,GAJH,cAIhBG,EAJgB,gBAKCA,EAAKC,OALN,uBAKdC,EALc,EAKdA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVhB,kBAafM,GAbe,4CAAH,sDCERO,EAAe,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACpC,OACE,yBAAKc,UAAU,QACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCDGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACdd,mBAAS,CAAEqB,KAAM,GAAIa,SAAS,IADhB,mBACjCC,EADiC,KAC1BC,EAD0B,KAMxC,OAHAC,qBAAU,WACRxB,EAASC,GAAUwB,MAAK,SAAChB,GAAD,OAAUc,EAAS,CAAEf,KAAMC,EAAMY,SAAS,SACjE,CAACpB,IACGqB,EDH2BI,CAAazB,GAAjCa,EADyB,EAC/BN,KAAca,EADiB,EACjBA,QAEtB,OACE,oCACE,4BAAKpB,GACL,6BAECoB,GAAW,UACZ,yBAAKJ,UAAU,+CACZH,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAcgB,IAAKhB,EAAIC,IAAQD,UEI1BiB,EAhBM,SAACC,GAAW,IAAD,EACM1C,mBAAS,CAAC,WADhB,mBACvBQ,EADuB,KACXT,EADW,KAE9B,OACE,oCACE,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACGS,EAAWe,KAAI,SAACT,GAAD,OACd,kBAAC,EAAD,CAASA,SAAUA,EAAU0B,IAAK1B,UCR5C6B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.08acf278.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleInputChange = ({ target: { value } }) => setInputValue(value);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories((categories) => [inputValue, ...categories]);\n      setInputValue(\"\");\n    }\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\nexport { AddCategory };\n","export const getGifts = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=ZefmqMjz8uhy3xSYf0SYps5gjRRYj9Om`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n  return gifs;\n};\n","import React from \"react\";\n\nexport const GiftGridItem = ({ title, url }) => {\n  return (\n    <div className=\"card\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GiftGridItem } from \"./GiftGridItem\";\n// import { getGifts } from \"../commons/getGifs\";\n\nexport const GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3>{category}</h3>\n      <hr />\n\n      {loading && \"Loading\"}\n      <div className=\"card-grid animate__animated animate__fadeIn\">\n        {images.map((img) => (\n          <GiftGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifts } from \"../commons/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setstate] = useState({ data: [], loading: true });\n\n  useEffect(() => {\n    getGifts(category).then((gifs) => setstate({ data: gifs, loading: false }));\n  }, [category]);\n  return state;\n};\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nconst GifExpertApp = (props) => {\n  const [categories, setCategories] = useState([\"soccer\"]);\n  return (\n    <>\n      <h2>Gif Expert App</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ol>\n        {categories.map((category) => (\n          <GifGrid category={category} key={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}